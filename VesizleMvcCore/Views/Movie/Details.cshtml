@model MovieDetailsViewModel

@{
    ViewBag.Title = "title";
}



<div class="ticket m-t-70">
    <div class="ticket1">
        <h2 class="movie-title">@Model.Title</h2>
        <img class="detailsPoster" src="@Model.PosterUrl">
    </div>
    <div class="ticket2">
        <iframe class="detailsYoutube" width="800" height="480" src="@Model.YoutubeUrl" frameborder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    </div>
</div>

@if (User.Identity.IsAuthenticated)
{

    <div class="row p-t-25 p-b-25 p-l-150">
        <div class="form-check">
            <input movie-id="@Model.MovieId" class="form-check-input visually-hidden" type="checkbox" id="watch" value="" class="form-check-input visually-hidden">
            <label class="form-check-label watchIcon" for="watch"><i class="fa fa-eye fa-4x"></i></label>
        </div>

        <div class="form-check m-l-320">
            <input movie-id="@Model.MovieId" class="form-check-input visually-hidden" type="checkbox" id="watched" value="" class="form-check-input visually-hidden">
            <label class="form-check-label watchedIcon" for="watched"><i class="fa fa-ticket-alt fa-4x"></i></label>
        </div>

        <div class="form-check m-l-320">
            <input movie-id="@Model.MovieId" class="form-check-input visually-hidden" type="checkbox" id="favorite" value="" class="form-check-input visually-hidden">
            <label class="form-check-label favIcon" for="favorite"><i class="fa fa-heart fa-4x"></i></label>
        </div>
    </div>

}

<div class="movieInfoBg m-t-80">
    <div class="container p-b-40 p-t-40 movieInfo ">
        <h3 class="p-b-10">Overview</h3>
        <h5 class="font-italic">&emsp; @Model.Overview</h5>
    </div>
</div>



<div class="row m-t-110 filmBg">
    <h2 class="m-b-8">Crew</h2>
    <div class="scrolling-wrapper row flex-row flex-nowrap mt-4 pb-4">
        @foreach (var crew in Model.CreditsViewModel.CrewViewModels)
        {
            <div class="col-2">
                <div class="card" id="card-block">

                    <div class="content">
                        <h6><a href="/Cast/Details/@crew.Id" title="@crew.Name">@crew.Name</a></h6>
                    </div>
                    <div class="image">
                        <a class="image " href="/Cast/Details/@crew.Id" title="@crew.Name">
                            <img class="poster" src="@(crew.ProfilePath)">
                        </a>
                    </div>
                    <div class="imdb">
                        <h7>@crew.Job</h7>
                        <h6>@crew.Department</h6>
                    </div>

                </div>
            </div>

        }

    </div>

</div>
<div class="row m-t-110 filmBg">
    <h2 class="m-b-8">Cast</h2>
    <div class="scrolling-wrapper row flex-row flex-nowrap mt-4 pb-4">
        @foreach (var cast in Model.CreditsViewModel.CastViewModels)
        {
            <div class="col-2">
                <div class="card" id="card-block">

                    <div class="content">
                        <h6><a href="/Cast/Details/@cast.Id" title="@cast.Name">@cast.Name</a></h6>
                    </div>
                    <div class="image">
                        <a class="image " href="/Cast/Details/@cast.Id" title="@cast.Name">
                            <img class="poster" src="@(cast.ProfilePath)">
                        </a>
                    </div>
                    <div class="imdb">
                        <h6>@cast.Character </h6>
                    </div>

                </div>
            </div>

        }

    </div>

</div>
<div class="row m-t-110 filmBg">
    <h2 class="m-b-8">Recommendations</h2>
    <div class="scrolling-wrapper row flex-row flex-nowrap mt-4 pb-4">
        @foreach (var recommendation in Model.Recommendations.Results)
        {
            @if (recommendation.Title.Length < 34)
            {
                <div class="col-2">
                    <div class="card" id="card-block">

                        <div class="content">
                            <h6><a href="/Movie/Details/@recommendation.MovieId" title="@recommendation.Title">@recommendation.Title</a></h6>
                        </div>
                        <div class="image">
                            <a class="image " href="/movie/details/@recommendation.MovieId" title="@recommendation.Title">
                                <img class="poster" src="@(recommendation.PosterPath)">
                            </a>
                        </div>
                        <div class="imdb">
                            <h6><a href="/movie/details/@recommendation.MovieId">Score<br>@recommendation.VoteAverage / 10</a></h6>
                        </div>

                    </div>
                </div>
            }

        }

    </div>

</div>

@section AjaxReq{
    @if (User.Identity.IsAuthenticated)
    {
        <script>
            function favorite() {

                var movieId = $('#favorite').attr("movie-id");
                $.get("/Profile/IsFavorite/", { "movieId": movieId }).done(function (data) {
                    if (data) {
                        $('#favorite').attr("checked", "checked");
                    }
                }).fail(function () {
                    //todo:toastify
                    Toastify({
                        text: data.message,
                        backgroundColor: "red",
                        className: "bg-danger"
                    }).showToast();
                });

                $('#favorite').click(function () {
                    var checkBox = $(this);
                    $.post("/Profile/AddFavorite",
                        {
                            "movieId": movieId
                        }).done(function (data) {
                            if (data.isSuccessful) {
                                Toastify({
                                    text: data.message,
                                    backgroundColor: "yellow",
                                    className: "bg-warning"
                                }).showToast();
                            } else {
                                Toastify({
                                    text: data.errors.map(e => e.description).join(" ,"),
                                    backgroundColor: "red",
                                    className: "bg-danger"
                                }).showToast();
                            }
                        }).fail(function () {
                            //todo:toastify
                            Toastify({
                                text: data.message,
                                backgroundColor: "red",
                                className: "bg-danger"
                            }).showToast();
                        });

                });
            }
            function watchList() {

                var movieId = $('#watch').attr("movie-id");
                $.get("/Profile/IsWatchList/", { "movieId": movieId }).done(function (data) {
                    if (data) {
                        $('#watch').attr("checked", "checked");
                    }
                }).fail(function () {
                    //todo:toastify
                    Toastify({
                        text: data.message,
                        backgroundColor: "red",
                        className: "bg-danger"
                    }).showToast();
                });

                $('#watch').click(function () {
                    var checkBox = $(this);
                    $.post("/Profile/AddWatchList",
                        {
                            "movieId": movieId
                        }).done(function (data) {
                            if (data.isSuccessful) {
                                Toastify({
                                    text: data.message,
                                    backgroundColor: "yellow",
                                    className: "bg-warning"
                                }).showToast();
                            } else {
                                Toastify({
                                    text: data.errors.map(e => e.description).join(" ,"),
                                    backgroundColor: "red",
                                    className: "bg-danger"
                                }).showToast();
                            }
                        }).fail(function () {
                            //todo:toastify
                            Toastify({
                                text: data.message,
                                backgroundColor: "red",
                                className: "bg-danger"
                            }).showToast();
                        });

                });
            }
            function watchedList() {

                var movieId = $('#watched').attr("movie-id");
                $.get("/Profile/IsWatchedList/", { "movieId": movieId }).done(function (data) {
                    if (data) {
                        $('#watched').attr("checked", "checked");
                    }
                }).fail(function () {
                    //todo:toastify
                    Toastify({
                        text: data.message,
                        backgroundColor: "red",
                        className: "bg-danger"
                    }).showToast();
                });

                $('#watched').click(function () {
                    var checkBox = $(this);
                    $.post("/Profile/AddWatchedList",
                        {
                            "movieId": movieId
                        }).done(function (data) {
                            if (data.isSuccessful) {
                                Toastify({
                                    text: data.message,
                                    backgroundColor: "yellow",
                                    className: "bg-warning"
                                }).showToast();
                            } else {
                                Toastify({
                                    text: data.errors.map(e => e.description).join(" ,"),
                                    backgroundColor: "red",
                                    className: "bg-danger"
                                }).showToast();
                            }
                        }).fail(function () {
                            //todo:toastify
                            Toastify({
                                text: data.message,
                                backgroundColor: "red",
                                className: "bg-danger"
                            }).showToast();
                        });

                });
            }
            favorite();
            watchedList();
            watchList();
        </script>
    }

}
